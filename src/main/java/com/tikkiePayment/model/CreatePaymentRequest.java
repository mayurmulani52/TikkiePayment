/*
 * Tikkie Payment Integration APIs
 * This is an integration APIs with Tikkie Payment gateway
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tikkiepayment.model;

import java.util.Objects;

import org.threeten.bp.LocalDate;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CreatePaymentRequestSuccess
 */

public class CreatePaymentRequest {
	
	  @SerializedName("email")
	  private String email = null;

	  @SerializedName("amountInCents")
	  private Integer amountInCents = null;

	  @SerializedName("description")
	  private String description = null;

	  @SerializedName("expiryDate")
	  private LocalDate expiryDate = null;

	  @SerializedName("referenceId")
	  private String referenceId = null;

	  public CreatePaymentRequest amountInCents(Integer amountInCents) {
	    this.amountInCents = amountInCents;
	    return this;
	  }
	  
	  /**
	   * Description of the payment request, which the payer or payers will see.
	   * @return description
	  **/
	  @Schema(example = "user@example.com", required = true, description = "Description of the payment request, which the payer or payers will see.")
	  public String getEmail() {
	    return email;
	  }

	  public void setEmail(String email) {
	    this.email = email;
	  }

	  public CreatePaymentRequest email(String email) {
	    this.email = email;
	    return this;
	  }
	  

	   /**
	   * Amount in cents of the payment request (euros). If this value is not specified, an open payment request will be created.
	   * @return amountInCents
	  **/
	  @Schema(example = "1500",  required = true, description = "Amount in cents of the payment request (euros). If this value is not specified, an open payment request will be created.")
	  public Integer getAmountInCents() {
	    return amountInCents;
	  }

	  public void setAmountInCents(Integer amountInCents) {
	    this.amountInCents = amountInCents;
	  }

	  public CreatePaymentRequest description(String description) {
	    this.description = description;
	    return this;
	  }

	   /**
	   * Description of the payment request, which the payer or payers will see.
	   * @return description
	  **/
	  @Schema(example = "Invoice 1815", required = true, description = "Description of the payment request, which the payer or payers will see.")
	  public String getDescription() {
	    return description;
	  }

	  public void setDescription(String description) {
	    this.description = description;
	  }

	  public CreatePaymentRequest expiryDate(LocalDate expiryDate) {
	    this.expiryDate = expiryDate;
	    return this;
	  }

	   /**
	   * Date after which the payment request will expire and cannot be paid. Format is yyyy-mm-dd.
	   * @return expiryDate
	  **/
	  @Schema(example = "Tue Feb 04 00:00:00 GMT 2020", required = true, description = "Date after which the payment request will expire and cannot be paid. Format is yyyy-mm-dd.")
	  public LocalDate getExpiryDate() {
	    return expiryDate;
	  }

	  public void setExpiryDate(LocalDate expiryDate) {
	    this.expiryDate = expiryDate;
	  }

	  public CreatePaymentRequest referenceId(String referenceId) {
	    this.referenceId = referenceId;
	    return this;
	  }

	   /**
	   * ID for the reference of the API consumer.
	   * @return referenceId
	  **/
	  @Schema(example = "inv_1815", required = true, description = "ID for the reference of the API consumer.")
	  public String getReferenceId() {
	    return referenceId;
	  }

	  public void setReferenceId(String referenceId) {
	    this.referenceId = referenceId;
	  }


	  @Override
	  public boolean equals(java.lang.Object o) {
	    if (this == o) {
	      return true;
	    }
	    if (o == null || getClass() != o.getClass()) {
	      return false;
	    }
	    CreatePaymentRequest CreatePaymentRequest = (CreatePaymentRequest) o;
	    return Objects.equals(this.amountInCents, CreatePaymentRequest.amountInCents) &&
	    	Objects.equals(this.email, CreatePaymentRequest.email) &&
	        Objects.equals(this.description, CreatePaymentRequest.description) &&
	        Objects.equals(this.expiryDate, CreatePaymentRequest.expiryDate) &&
	        Objects.equals(this.referenceId, CreatePaymentRequest.referenceId);
	  }

	  @Override
	  public int hashCode() {
	    return Objects.hash(amountInCents, description, expiryDate, referenceId);
	  }


	  @Override
	  public String toString() {
	    StringBuilder sb = new StringBuilder();
	    sb.append("class CreatePaymentRequest {\n");
	    
	    sb.append("    email: ").append(toIndentedString(email)).append("\n");
	    sb.append("    amountInCents: ").append(toIndentedString(amountInCents)).append("\n");
	    sb.append("    description: ").append(toIndentedString(description)).append("\n");
	    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
	    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
	    sb.append("}");
	    return sb.toString();
	  }

	  /**
	   * Convert the given object to string with each line indented by 4 spaces
	   * (except the first line).
	   */
	  private String toIndentedString(java.lang.Object o) {
	    if (o == null) {
	      return "null";
	    }
	    return o.toString().replace("\n", "\n    ");
	  }

}
